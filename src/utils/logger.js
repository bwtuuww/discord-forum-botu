const { EmbedBuilder } = require('discord.js');
const { logChannelId } = require('../config');

/**
 * Ä°ÅŸlem loglarÄ±nÄ± belirtilen log kanalÄ±na gÃ¶nderir
 * @param {Client} client - Discord.js client nesnesi
 * @param {Object} options - Log seÃ§enekleri
 */
async function sendLog(client, options) {
  try {
    const {
      title,
      description,
      color,
      fields = [],
      footer,
      thumbnailUrl,
      imageUrl
    } = options;

    // Log kanalÄ±nÄ± bul
    const logChannel = await client.channels.fetch(logChannelId).catch(() => null);
    if (!logChannel) {
      console.error('Log kanalÄ± bulunamadÄ±. Config dosyasÄ±ndaki logChannelId kontrol edilmeli.');
      return;
    }

    // Log embed'i oluÅŸtur
    const logEmbed = new EmbedBuilder()
      .setColor(color || 0x0099FF)
      .setTitle(title)
      .setDescription(description ? `\`\`\`yaml\n${description}\n\`\`\`` : null)
      .setTimestamp();

    // Thumbnail varsa ekle
    if (thumbnailUrl) {
      logEmbed.setThumbnail(thumbnailUrl);
    }

    // Resim varsa ekle
    if (imageUrl) {
      logEmbed.setImage(imageUrl);
    }

    // Alanlar varsa ekle
    if (fields && fields.length > 0) {
      logEmbed.addFields(fields);
    }

    // Footer varsa ekle
    if (footer) {
      logEmbed.setFooter({ text: footer });
    }

    // Log kanalÄ±na gÃ¶nder
    await logChannel.send({ embeds: [logEmbed] });
  } catch (error) {
    console.error('Log gÃ¶nderilemedi:', error);
  }
}

/**
 * Engelleme iÅŸlemini loglar
 * @param {Client} client - Discord.js client nesnesi
 * @param {Object} data - Engelleme verileri
 */
async function logBlock(client, data) {
  const {
    targetUser,
    reason,
    executor,
    guild,
    channel,
    imageUrl
  } = data;

  await sendLog(client, {
    title: 'ğŸ”’ KullanÄ±cÄ± Engellendi',
    description: `KullanÄ±cÄ±: ${targetUser.username} (${targetUser.id})\nSebep: ${reason}`,
    color: 0xFF0000, // KÄ±rmÄ±zÄ±
    thumbnailUrl: targetUser.displayAvatarURL(),
    imageUrl: imageUrl, // KanÄ±t fotoÄŸrafÄ±
    fields: [
      { name: 'Sunucu', value: `\`\`\`yaml\n${guild.name}\n\`\`\``, inline: true },
      { name: 'Forum', value: `\`\`\`yaml\n${channel.name}\n\`\`\``, inline: true },
      { name: 'Engeli Koyan', value: `\`\`\`yaml\n${executor.id}\n${executor.username}\n\`\`\``, inline: true },
      { name: 'Tarih', value: `<t:${Math.floor(Date.now() / 1000)}:F>`, inline: false }
    ],
    footer: `Forum ID: ${channel.id}`
  });
}

/**
 * Engel kaldÄ±rma iÅŸlemini loglar
 * @param {Client} client - Discord.js client nesnesi
 * @param {Object} data - Engel kaldÄ±rma verileri
 */
async function logUnblock(client, data) {
  const {
    targetUser,
    reason,
    executor,
    guild,
    channel
  } = data;

  await sendLog(client, {
    title: 'ğŸ”“ KullanÄ±cÄ± Engeli KaldÄ±rÄ±ldÄ±',
    description: `KullanÄ±cÄ±: ${targetUser.username} (${targetUser.id})\nSebep: ${reason}`,
    color: 0x00FF00, // YeÅŸil
    thumbnailUrl: targetUser.displayAvatarURL(),
    fields: [
      { name: 'Sunucu', value: `\`\`\`yaml\n${guild.name}\n\`\`\``, inline: true },
      { name: 'Forum', value: `\`\`\`yaml\n${channel.name}\n\`\`\``, inline: true },
      { name: 'Engeli KaldÄ±ran', value: `\`\`\`yaml\n${executor.id}\n${executor.username}\n\`\`\``, inline: true },
      { name: 'Tarih', value: `<t:${Math.floor(Date.now() / 1000)}:F>`, inline: false }
    ],
    footer: `Forum ID: ${channel.id}`
  });
}

module.exports = {
  sendLog,
  logBlock,
  logUnblock
}; 